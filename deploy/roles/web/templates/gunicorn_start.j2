#!/bin/bash

NAME="{{ application_name }}"
DJANGODIR={{ application_path }}
SOCKFILE={{ virtualenv_path }}/run/gunicorn.sock
PIDFILE={{ virtualenv_path }}/run/gunicorn.pid
USER={{ gunicorn_user }}
GROUP={{ gunicorn_group }}
NUM_WORKERS={{ gunicorn_num_workers }}

# Set this to 0 for unlimited requests. During development, you might want to
# set this to 1 to automatically restart the process on each request (i.e. your
# code will be reloaded on every request).
MAX_REQUESTS={{ gunicorn_max_requests }}

echo "Starting $NAME as `whoami`"

# Activate the virtual environment.
cd $DJANGODIR
source ../../bin/activate

# Set additional environment variables.
source ../../bin/postactivate

# Create the run directory if it doesn't exist.
RUNDIR=$(dirname $SOCKFILE)
test -d $RUNDIR || mkdir -p $RUNDIR

{% if development %}
watchmedo shell-command \
    --patterns="*.py" \
    --recursive \
    --command='kill -HUP `cat $PIDFILE`' \
    {{ application_path }} &
{% endif %}

# Programs meant to be run under supervisor should not daemonize themselves
# (do not use --daemon).
exec gunicorn wittl.wsgi:application \
 		--name $NAME \
  		--workers $NUM_WORKERS \
  		--max-requests $MAX_REQUESTS \
  		--user=$USER --group=$GROUP \
  		--log-level=debug \
        --pid $PIDFILE\
  		--bind=unix:$SOCKFILE